% This is the global configuration file for ejabberd. We use several contributed
% modules (see "Custom modules") and manage them and our ejabberd installation
% in an apt repository (see "Apt repository").
%
% This configuration file is split into several parts to increase readability.
% Also, all secrets are stored in a file "secrets.cfg" that is not shared with
% the public and contains macros used in the public config-files. With file
% inclusion and macro definition this config-file requires ejabberd 2.1.0 or
% later!

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% This config-file has a global section and sections for each server %%%
%%% configured in the hosts variable. For questions ask mati@fsinf.at  %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Important notice: if you want to move a global configuration variable
% to a per-server basis (or the other way round), you have to think of one 
% thing: global variables end with a dot (since they are top-level), and
% local ones end with a colon (',').

%%%%%%%%%%%%%%%%%%%%%%
%%% Apt repository %%%
%%%%%%%%%%%%%%%%%%%%%%

% We manage ejabberd and all the contributed modules in our apt repository.
% The apt repository can be found at 
%	http://apt.fsinf.at
% The source for building the packages can be found at
%	http://git.fsinf.at/apt
% There is a homepage that explains what components we support:
%	https://jabber.at/en/apt-repositories

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Custom modules %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% The source of the custom modules is available in an official SVN-repository:
%	https://svn.process-one.net/ejabberd-modules
% The modules are managed in our apt-repository (see above).
%
% Currently, these custom modules are installed:
% * mod_admin_extra (additional commands for ejabberdctl)
% * mod_webpresence (presence via web)
% * mod_muc_admin (muc-related commands for ejabberdctl)
% * mod_xmlrpc (XMLRPC interface, used by https://jabber.at/register)
% * pgsql (we use postgres as a database backend)

%%%%%%%%%%%%%%%%%%%%%%
%%% Global Section %%%
%%%%%%%%%%%%%%%%%%%%%%
% some settings completely independent of hosts

% override all global settings
override_global.
override_local.
override_acls.

% Names this node should listen on. Note that you will have to configure a 
% host_config section, before you can actually use a new server.
{hosts, ["jabber.at"]}.
{registration_timeout, 600}.

%%%%%%%%%%%%%%%%
%%% CAPTCHAs %%%
%%%%%%%%%%%%%%%%
{captcha_cmd, "/usr/lib/ejabberd/priv/bin/captcha.sh"}.
{captcha_host, "https://jabber.at"}.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Global Access-Control Lists %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% these ACLs will be used as a default. You can also extend them on a per-host basis.

% local users:
{acl, local, { server, "jabber.at" } }.

% admins:
{acl, admin, { user, "mati", "jabber.at" } }.
{acl, admin, { user, "astra", "jabber.at" } }.
{acl, admin, { user, "ra", "jabber.at" } }.
{acl, admin, { user, "klausi", "jabber.at" } }.

% blocked users: 
{acl, blocked, { user, "admin" } }.
{acl, blocked, { user, "root" } }.
{acl, blocked, { user, "postmaster" } }.
{acl, blocked, { user, "hostmaster" } }.
{acl, blocked, { user, "webmaster" } }.
{acl, blocked, { user, "fsinf" } }.
{acl, blocked, { user, "jabber" } }.

% access-list to admin-stuff. Defining this here means that admins will _always_ be able to use
% these services, even if something like "{deny, all}" is defined in the host_config-section.
{access, configure, [{allow, admin}]}. % configuration interface (see http://localhost:5281/admin )
{access, announce,  [{allow, admin}]}. % send announcement messages
{access, muc_admin, [{allow, admin}, {allow, muc_admin}]}. % multi-user chat admins

% note that each host_config has to define who is actually _allowed_ to use these services:
{access, c2s, [ {deny, blocked}, {allow, all} ]}.
{access, register, [ {deny, blocked}, {allow, local } ]}.
{access, pubsub_createnode, [ {deny, blocked}, {allow, all} ]}.
{access, muc, [ {deny, blocked}, {allow, all} ]}.
{access, irc, [ {deny, blocked}, {allow, all} ]}.
{access, mod_proxy65, [ {deny, blocked}, {allow, local} ]}.
{access, webpresence, [ {deny, blocked}, {allow, local} ]}.
{access, transport, [ {deny, blocked}, {allow, all} ]}.
{access, transport_xmpp, [ {deny, blocked}, {allow, local} ]}.

{access, max_user_offline_messages, [ {2000, admin}, {100, all} ]}.

% We limit the Bandwith for all connections:
% * admins have unlimited bandwith (no shaper)
% * s2s is limited to 50KB/s (fast shaper)
% * c2s for normal users is limited to 1KB/s (normal shaper)
{shaper, normal, {maxrate, 1000}}. %This is in Byte/s
{shaper, proxy, {maxrate, 10000}}. % for mod_proxy65. This is 10KB/s
{shaper, fast, {maxrate, 50000}}.
{access, c2s_shaper, [{none, admin}, {normal, all}]}.
{access, proxy_shaper, [{none, admin}, {proxy, all}]}.
{access, s2s_shaper, [{fast, all}]}.

% Define the maximum concurrent connections a user is allowed to have:
{access, max_user_sessions, [ 
	{infinity, admin},
	{10, all}
]}.

% Default language for server messages
{language, "en"}.
{loglevel, 2}.

% captcha
{captcha_cmd, "/usr/lib/ejabberd/priv/bin/captcha.sh"}.
{captcha_host, "jabber.at"}.


% secrets.cfg defines all the secrets that we do not want to share with the world.
% You have to duplicate it to get this working, it looks like this:
%     {define_macro, 'POSTGRES_FSINF_AT_PASSWORD', "super_secret" }.
%     {define_macro, 'POSTGRES_JABBER_FSINF_AT_PASSWORD', "even_more_secret" }.
%     ...
{include_config_file, "/etc/ejabberd/secrets.cfg"}. 

{include_config_file, "/etc/ejabberd/ports.cfg"}.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Globally Used Modules %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

{auth_method, internal}.

{modules, [
	{mod_roster,		[{versioning, true}, {store_current_id, true}]},
	{mod_privacy,		[]},
	{mod_blocking,		[]}, % depends on mod_privacy
	{mod_offline,		[]},
	{mod_private,		[]},
	{mod_last,       	[]},
	{mod_adhoc,		[]},
	{mod_configure,		[{access, configure}]}, % depends on mod_adhoc
	{mod_stats,		[]},
	{mod_announce,		[{access, announce}]}, % recommends mod_adhoc
	{mod_time,		[]},
	{mod_ping,		[{send_pings, true}, {ping_interval, 60},
				 {timeout_action, kill}
				]},
	{mod_version,    	[]},
	{mod_http_bind,		[]},
	{mod_echo,		[]},
	{mod_caps,		[]},
	{mod_register,		[{access, register},
				 {captcha_protected, true},
				 {registration_watchers, [ "mati@jabber.at", "ra@jabber.at", "astra@jabber.at" ]}
				]},
	{mod_vcard,		[]},
%	{mod_pubsub,		[{access_createnode, pubsub_createnode},
%				 {plugins, ["flat_odbc", "hometree_odbc", "pep_odbc"]}
%				]},
	{mod_disco,		[{server_info, 
				 [{[mod_muc], "Chatroom logs", ["http://jabber.at/logs"]}]}
				]}, 
	{mod_irc,		[ {access, all},
				  {default_encoding, "utf-8"}
				]},
	{mod_muc,		[ {access, muc}, {access_create, local},
				  {access_admin, muc_admin}, {moderated, false},
				  {allow_user_invites, true},
				  {max_user_conferences, 5},
				  {min_message_interval, 1},
				  {min_presence_interval,1}
				]},
	{mod_proxy65,		[ {shaper, proxy_shaper}, {max_connections, 5},
				  {access, mod_proxy65}
				]},

	{mod_pres_counter,  [{count, 5}, {interval, 60}]},

	% contributed ejabberd-modules:
	{mod_admin_extra,	[]},
	{mod_muc_admin,		[]},
	{mod_muc_log,		[ {access_log, all}, {timezone, local},
				  {outdir, "/var/www/jabber.at/sites/jabber.at/logs"},
				  {toplink, {"/", "jabber.at"}}
				]}, % depends on mod_muc
	{mod_webpresence,	[ {pixmaps_path, "/usr/share/ejabberd-mod-webpresence/pixmaps/"},
				  {baseurl, "http://jabber.at/presence/"},
				  {access, webpresence}
				]}
	
	% mod_xmlrpc is configured in the ports-section (see ports.cfg)
]}.
		
{welcome_message, {"Welcome!", 
	"Welcome to the jabber.at, a Jabber service provided by the Fachschaft Informatik.  ",
	"For more information about this service as well as news and announcements, please visit http://jabber.at. ",
	"If you need more information about jabber in general, see http://en.wikipedia.org/wiki/Jabber.",
	"Please note that unused accounts will be delete after 12 months of inactivity." }
}.


% Local Variables:
% mode: erlang
% End:
